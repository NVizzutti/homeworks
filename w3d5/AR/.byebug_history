q
c
obj
q
obj.foreign_key
foreign_key
self.send(obj.foreign_key)
obj.foreign_key
q
options
self.send(options.foreign_key)
self.sent(options.foreign_key)
self
se;f
key_val
n
key_val
options.primary_key
options
n
self.class.assoc_options[name]
options
c
q
obj.model_class.where('id = 1')
obj.model_class.where('id = 3)
obj.model_class
obh
obj
obj.model_class.where(:id => :foreign_key)
obj.model_class.where()
obj.model_class
options
options.model_class
options
self.class.assoc_options
self.class
self
obj.model_class.where(id: options[:foreign_key])
foreign_key
obj.model_class.where(id: :owner_id)
obj.model_class.where('id = owner_id')
obj.model_class.where(:id => :owner_id)
obj
obj.model_class.where(:primary_key => :owner_id)
obj.model_class
obj
options
c
n
options
name
options
q
self
self.columns
self
self.class
self
self.class
self
options[:primary_key]
name
options
quit
self.class.columns
self.class
self.columns
self
self.columns
self
quit
c
self
self.class.columns
self.columns
self
c
self.class
self
c
n
self
n
result
self.new
self
c
self.table_name
c
cols.join('AND')
vals
cols
self.table_name
self
c
params
cals
vals
cols
quit
cals
vals
cols
params
cols
c
attribute_values
self.attribute_values.last
cols.join(',')
cols.join(',)
self.class.table_name
vals
cols.join(',')
cols
c
vals
cols
quit
cols[1..-1]
cols.take(1)
cols.drop(1)
cols
vals
c
quit
question_marks
cols
vals
quit
attribute_values
vals
cols
quit
columns
attribute_values
vals
cals
vals
self.class.table_name
self.class.columns
self.attribute_values
c
n
self.class.table_name
self.table_name
self.class
self
quit
self.to_s
self.class
self
